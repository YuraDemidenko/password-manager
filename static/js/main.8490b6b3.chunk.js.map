{"version":3,"sources":["features/appSlice.js","pages/login-page.js","pages/register-page.js","modal/Modal.js","pages/dashboard.js","App.js","reportWebVitals.js","app/store.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","auth","getAuth","getRecords","createAsyncThunk","userId","thunkAPI","a","docRef","doc","onSnapshot","dispatch","records","data","appSlice","createSlice","name","initialState","loginFormError","regFormError","isRegistrated","isLogedIn","loginIsAlreadyExist","invalidLogin","invalidPassword","isRegFormError","reducers","registration","state","action","payload","createUserWithEmailAndPassword","email","password","then","userCredential","user","localStorage","setItem","JSON","stringify","uid","setDoc","id","catch","error","console","log","message","login","signInWithEmailAndPassword","logout","removeItem","signOut","setNewRecord","currentUser","updateDoc","arrayUnion","deleteRecord","recordRef","arrayRemove","changeRecord","hidePassword","actions","userState","manager","Login","props","useSelector","useDispatch","history","useHistory","useState","setUser","useEffect","onAuthStateChanged","getItem","parse","push","className","type","placeholder","onChange","event","target","value","onClick","Registration","newUser","setNewUser","e","Modal","openModal","addModal","addForm","changeFeild","DashBoard","trashBtn","icon","faTrash","hideBtn","faEye","changeBtn","faPen","active","setActive","isHidden","setIsHidden","button","setButton","itemIndex","setIndex","title","hidePass","record","setRecord","map","item","index","replace","repeat","length","hidePassItem","hideRecords","slice","splice","openEditModal","editItem","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","appReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"yTAKMA,EAAcC,YAAc,CAC9BC,OAAQ,0CACRC,WAAY,yCACZC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGbC,EAAKC,YAAaV,GAClBW,EAAOC,cAiBAC,EAAaC,YACtB,mBADsC,uCAEtC,WAAOC,EAAQC,GAAf,eAAAC,EAAA,sDAEUC,EAASC,YAAIV,EAAI,QAASM,GAEhCK,YAAWF,GAAQ,SAACC,GAChBH,EAASK,SAASC,EAAQH,EAAII,YALtC,2CAFsC,yDAa7BC,EAAWC,YAAY,CAChCC,KAAM,UACNC,aA7BiB,CACjBL,QAAS,GACTM,eAAgB,GAChBC,aAAc,GACdC,eAAe,EACfC,WAAW,EACXC,qBAAqB,EACrBC,cAAc,EACdC,iBAAiB,EACjBC,gBAAgB,GAsBhBC,SAAU,CACNC,aAAc,SAACC,EAAOC,GAElB,IAAMhB,EAAOgB,EAAOC,QAEpBC,YAA+B9B,EAAMY,EAAKmB,MAAOnB,EAAKoB,UAErDC,MAAK,SAACC,GAEH,IAAMC,EAAOD,EAAeC,KAE5BR,EAAMH,gBAAiB,EAEvBY,aAAaC,QAAQ,OAAQC,KAAKC,UAAU,CACxCC,IAAKL,EAAKK,IACVT,MAAMI,EAAKJ,MACXC,SAAUpB,EAAKoB,YAGnBS,YAAOjC,YAAIV,EAAI,QAASqC,EAAKK,KAAM,CAC/BE,GAAIP,EAAKK,IACTT,MAAOI,EAAKJ,MACZC,SAAUpB,EAAKoB,SACfrB,QAAS,QAKhBgC,OAAM,SAACC,GACJC,QAAQC,IAAIF,EAAMG,aAK1BC,MAAO,SAACrB,EAAOC,GAEX,IAAMhB,EAAOgB,EAAOC,QAEpBoB,YAA2BjD,EAAMY,EAAKmB,MAAOnB,EAAKoB,UAEjDC,MAAK,SAACC,GAEH,IAAMC,EAAOD,EAAeC,KAE5BC,aAAaC,QAAQ,OAAQC,KAAKC,UAAU,CACxCC,IAAKL,EAAKK,IACVT,MAAMI,EAAKJ,MACXC,SAAUpB,EAAKoB,eAItBW,OAAM,SAAAC,GACJC,QAAQC,IAAIF,EAAMG,aAKzBG,OAAQ,WACJd,aAAae,WAAW,QACxBC,YAAQpD,GAAMiC,MAAK,eAEhBU,OAAM,SAACC,GACNC,QAAQC,IAAIF,OAIpBS,aAAc,SAAC1B,EAAOC,GAElB,IAAMxB,EAASI,YAAIV,EAAI,QAASE,EAAKsD,YAAYd,KAEjDe,YAAUnD,EAAQ,CACdO,QAAS6C,YAAW5B,EAAOC,YAKnC4B,aAAc,SAAC9B,EAAOC,GAClB,IAAM8B,EAAYlD,YAAIV,EAAI,QAASE,EAAKsD,YAAYd,KACpDe,YAAUG,EAAW,CAAE/C,QAASgD,YAAY/B,EAAOC,YAKvDlB,QAAS,SAACgB,EAAOC,GACbD,EAAMhB,QAAUiB,EAAOC,QAAQlB,SAGnCiD,aAAc,SAACjC,EAAOC,GAElB,IAAMxB,EAASI,YAAIV,EAAI,QAASE,EAAKsD,YAAYd,KAEjDe,YAAUnD,EAAQ,CACdO,QAASiB,EAAOC,WAIxBgC,aAAc,SAAClC,EAAOC,GAElB,IAAMxB,EAASI,YAAIV,EAAI,QAASE,EAAKsD,YAAYd,KAEjDe,YAAUnD,EAAQ,CACdO,QAASiB,EAAOC,cAOzB,EAAuGhB,EAASiD,QAAzGpC,EAAP,EAAOA,aAAcsB,EAArB,EAAqBA,MAAOE,EAA5B,EAA4BA,OAAQG,EAApC,EAAoCA,aAAcI,EAAlD,EAAkDA,aAAc9C,EAAhE,EAAgEA,QAASiD,EAAzE,EAAyEA,aAAcC,EAAvF,EAAuFA,aAEjFE,EAAY,SAACpC,GAAD,OAAWA,EAAMqC,SAE3BnD,IAAf,Q,OC1Je,SAASoD,EAAMC,GAGZC,YAAYJ,GAA1B,IACMrD,EAAW0D,cACXpE,EAAOC,cAEPoE,EAAUC,cAEhB,EAAsBC,mBAAS,CAC3BxC,MAAO,GACPC,SAAU,KAFd,mBAAKG,EAAL,KAAWqC,EAAX,KAkCA,OApBAC,qBAAU,WACNC,YAAmB1E,GAAM,SAACmC,GAClBA,GAEGC,aAAauC,QAAQ,SACpBjE,EAASsC,EAAMV,KAAKsC,MAAMxC,aAAauC,QAAQ,WAGnDN,EAAQQ,KAAK,eAIbR,EAAQQ,KAAK,WASrB,qBAAKC,UAAU,UAAf,SACI,sBAAKA,UAAU,MAAf,UAEI,qBAAKA,UAAU,QAAf,SACI,2CAGJ,uBAAMA,UAAU,WAAhB,UAEI,uBAAOC,KAAK,OAAOC,YAAY,mBAC3BC,SAAU,SAAAC,GAAK,OAAIV,EAAQ,2BAAIrC,GAAL,IAAWJ,MAAQmD,EAAMC,OAAOC,YAI9D,uBAAOL,KAAK,WAAYC,YAAY,sBAChCC,SAAU,SAAAC,GAAK,OAAIV,EAAQ,2BAAIrC,GAAL,IAAWH,SAAWkD,EAAMC,OAAOC,YAGjE,wBAAQL,KAAK,SAASM,QAhDtC,WACI3E,EAASsC,EAAMb,KA+CH,qBAEA,wBAAQ2C,UAAU,OAAOO,QAAS,kBAAMhB,EAAQQ,KAAK,uBAArD,uDCjEL,SAASS,IAENnB,YAAYJ,GAA1B,IACMrD,EAAW0D,cACXC,EAAUC,cACVtE,EAAOC,cAIb,EAA4BsE,mBAAS,CACjCxC,MAAO,GACPC,SAAU,KAFd,mBAAKuD,EAAL,KAAcC,EAAd,KAwBA,OAdAf,qBAAU,WACNC,YAAmB1E,GAAM,SAACmC,GAClBA,IAEGC,aAAauC,QAAQ,SACpBjE,EAASsC,EAAMV,KAAKsC,MAAMxC,aAAauC,QAAQ,WAGnDN,EAAQQ,KAAK,qBAOrB,qBAAKC,UAAU,UAAf,SAEI,sBAAKA,UAAU,MAAf,UAEI,qBAAKA,UAAU,QAAf,SACI,gDAGJ,uBAAMA,UAAU,WAAhB,UAEI,uBAAOC,KAAK,QAAQC,YAAY,mBAChCC,SAAU,SAAAC,GAAK,OAAIM,EAAW,2BAAID,GAAL,IAAcxD,MAAQmD,EAAMC,OAAOC,YAGhE,uBAAOL,KAAK,WAAYC,YAAY,sBACpCC,SAAU,SAAAC,GAAK,OAAIM,EAAW,2BAAID,GAAL,IAAcvD,SAAWkD,EAAMC,OAAOC,YAEnE,wBAAQL,KAAK,SAASM,QApCtB,SAACI,GACb/E,EAASgB,EAAa6D,KAmCV,0BAEA,wBAAQT,UAAU,OAAOO,QAAS,kBAAMhB,EAAQQ,KAAK,MAArD,0D,MCxDL,SAASa,EAAMxB,GAG1B,IAAIY,EAAY,kBAIhB,OAFIZ,EAAMyB,YAAWb,GAAa,WAG9B,sBAAKA,UAAWA,EAAhB,UAEI,qBAAKA,UAAU,UAAUO,QAASnB,EAAMe,WAExC,sBAAKH,UAAU,QAAf,UACKZ,EAAM0B,SACN1B,EAAM2B,QACN3B,EAAM4B,kB,oBCRR,SAASC,EAAU7B,GAE9B,IAAMvC,EAAQwC,YAAYJ,GACpBrD,EAAW0D,cACXpE,EAAOC,cACPoE,EAAUC,cACV0B,EAAW,cAAC,IAAD,CAAiBC,KAAMC,MAClCC,EAAU,cAAC,IAAD,CAAiBF,KAAMG,MACjCC,EAAY,cAAC,IAAD,CAAiBJ,KAAMK,MAGzC,EAA0B/B,oBAAS,GAAnC,mBAAKgC,EAAL,KAAaC,EAAb,KAEA,EAA8BjC,oBAAS,GAAvC,mBAAKkC,EAAL,KAAeC,EAAf,KAEA,EAA0BnC,oBAAS,GAAnC,mBAAKoC,EAAL,KAAaC,EAAb,KAEA,EAA4BrC,mBAAS,IAArC,mBAAKsC,EAAL,KAAgBC,EAAhB,KAEA,EAA0BvC,mBAAS,CAC/BwC,MAAO,GACP/E,SAAU,GACVD,MAAO,GACPiF,UAAU,IAJd,mBAAKC,EAAL,KAAaC,EAAb,KAOMvB,EAAY,WACda,EAAUD,GAAUA,IAyDxB,OATA9B,qBAAU,WAENC,YAAmB1E,GAAM,SAACmC,GAClBA,GAAMzB,EAASR,EAAWiC,EAAKK,WAGxC,IAKC,sBAAKsC,UAAU,sBAAf,UACI,sBAAKA,UAAU,mBAAf,UACI,+CAEA,gCACI,wBAAQA,UAAU,MAAMO,QAAS,WAAOM,IAAaiB,GAAU,IAA/D,4BACA,wBAAQ9B,UAAU,SAASO,QA5C3B,WACZ3E,EAASwC,KACTmB,EAAQQ,KAAK,MA0CD,0BAIR,qBAAKC,UAAU,YAAf,SACI,kCACI,uBAAOA,UAAU,eAAjB,SACI,+BACI,0CACA,uCACA,+CAIR,uBAAOA,UAAU,aAAjB,SACKnD,EAAMhB,QAAQwG,KAAI,SAACC,EAAMC,GAAP,OACf,+BACI,6BAAMD,EAAKL,QACX,6BAAMK,EAAKrF,QAEVqF,EAAKJ,SACF,6BAAMI,EAAKpF,WAEX,6BAAMoF,EAAKpF,SAASsF,QAAQF,EAAKpF,SAAU,KAAKuF,OAAOH,EAAKpF,SAASwF,UAGzE,oBAAI1C,UAAU,OAAOO,QAAS,kBAAM3E,EAAS+C,EAAa2D,KAA1D,SAAmEpB,IAEnE,oBAAIlB,UAAU,OAAOO,QAAS,kBA1FzC,SAACgC,EAAOD,GAErBV,EAAYD,GAAYA,GAExB,IAAIgB,EAAe,CACfV,MAAOK,EAAKL,MACZhF,MAAOqF,EAAKrF,MACZC,SAAUoF,EAAKpF,SACfgF,SAAUP,GAGViB,EAAc/F,EAAMhB,QAAQgH,QAEhCD,EAAYE,OAAOP,EAAO,EAAGI,GAE7B/G,EAASmD,EAAa6D,IA2EsCV,CAASK,EAAOD,IAApD,SAA4DjB,IAE5D,oBAAIrB,UAAU,OAAOO,QAAS,kBAhEpC,SAAC+B,EAAMC,GAEzBT,GAAU,GACVjB,IACAmB,EAASO,GA4DmDQ,CAAcT,EAAMC,IAAxD,SAAiEhB,MAd5DgB,aAsBzB,cAAC,WAAD,UAEI,cAAC,EAAD,CAAO1B,UAAWY,EAAQtB,SAAUU,EAEhCE,QACI,iCAEI,uBAAOd,KAAK,OAAOC,YAAY,uBAC/BC,SAAU,SAAAC,GAAK,OAAIgC,EAAU,2BAAID,GAAL,IAAaF,MAAQ7B,EAAMC,OAAOC,YAE9D,uBAAOL,KAAK,OAAOC,YAAY,mBAC/BC,SAAU,SAAAC,GAAK,OAAIgC,EAAU,2BAAID,GAAL,IAAalF,MAAQmD,EAAMC,OAAOC,YAE9D,uBAAOL,KAAK,OAAOC,YAAY,sBAC/BC,SAAU,SAAAC,GAAK,OAAIgC,EAAU,2BAAID,GAAL,IAAajF,SAAWkD,EAAMC,OAAOC,YAEhEuB,EACG,wBAAQ5B,KAAK,SAASM,QAlF9B,WAChB,IAAIyC,EAAWnG,EAAMhB,QAAQgH,QAE7BG,EAASF,OAAOf,EAAW,EAAGI,GAE9BvG,EAASkD,EAAakE,IAEtBnC,KA2EwB,yBAEA,wBAAQZ,KAAK,SAASM,QAhG5B,WAClB3E,EAAS2C,EAAa4D,IACtBtB,KA8FwB,kCC1HjBoC,MA9Bf,WAEI,IAAM1D,EAAUC,cAEhB,OACI,cAAC,IAAD,CAAQD,QAASA,EAAjB,SACI,qBAAKS,UAAU,gBAAf,SAEI,eAAC,IAAD,WAEI,cAAC,IAAD,CAAOkD,KAAK,qBAAZ,SACI,cAAC1C,EAAD,MAGJ,cAAC,IAAD,CAAO0C,KAAK,aAAZ,SACI,cAACjC,EAAD,MAGJ,cAAC,IAAD,CAAOiC,KAAK,IAAZ,SACI,cAAC/D,EAAD,cCfTgE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlG,MAAK,YAAkD,IAA/CmG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHCO,G,MAAAA,YAAe,CAC5BC,QAAS,CACP1E,QAAS2E,MCEbC,IAASC,OAEP,cAAC,IAAMC,WAAP,UAEE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SAEE,cAAC,EAAD,QAMJC,SAASC,eAAe,SAK1BhB,M","file":"static/js/main.8490b6b3.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk, current } from '@reduxjs/toolkit'\nimport { getFirestore, doc, setDoc, updateDoc, arrayUnion, arrayRemove, onSnapshot, getDoc, collection, query, wher} from \"firebase/firestore\"\nimport { initializeApp } from \"firebase/app\"\nimport { getAuth, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut} from \"firebase/auth\";\n\nconst firebaseApp = initializeApp({\n    apiKey: \"AIzaSyBFUESXzMJHatvgXZxl80i2lvgerP6mXwY\",\n    authDomain: \"password-manager-8f21e.firebaseapp.com\",\n    projectId: \"password-manager-8f21e\",\n    storageBucket: \"password-manager-8f21e.appspot.com\",\n    messagingSenderId: \"791009326064\",\n    appId: \"1:791009326064:web:1b29e1af2ae529686d2335\",\n    measurementId: \"G-NQ7FGCHQH6\"\n});\n\nconst db = getFirestore(firebaseApp);\nconst auth = getAuth();\n\n\nconst initialState = {\n    records: [],\n    loginFormError: '',\n    regFormError: '',\n    isRegistrated: false,\n    isLogedIn: false,\n    loginIsAlreadyExist: false,\n    invalidLogin: false,\n    invalidPassword: false,\n    isRegFormError: false\n    \n}\n\n\nexport const getRecords = createAsyncThunk( \n    'users/getRecords',\n    async (userId, thunkAPI) => {\n\n        const docRef = doc(db, \"users\", userId);\n\n        onSnapshot(docRef, (doc) => {\n            thunkAPI.dispatch(records(doc.data()))\n        });\n\n    }\n)\n\nexport const appSlice = createSlice({\n    name: 'manager',\n    initialState,\n\n    reducers: {\n        registration: (state, action) => {\n\n            const data = action.payload;\n\n            createUserWithEmailAndPassword(auth, data.email, data.password)\n\n            .then((userCredential) => {\n                \n                const user = userCredential.user;\n\n                state.isRegFormError = false;\n\n                localStorage.setItem('user', JSON.stringify({\n                    uid: user.uid,\n                    email:user.email,\n                    password: data.password,     \n                }));\n\n                setDoc(doc(db, \"users\", user.uid), {\n                    id: user.uid,\n                    email: user.email,\n                    password: data.password,\n                    records: []\n                });\n\n            })\n\n            .catch((error) => {\n                console.log(error.message);\n                \n            });\n        },\n\n        login: (state, action) => {\n\n            const data = action.payload;\n\n            signInWithEmailAndPassword(auth, data.email, data.password)\n\n            .then((userCredential) => {\n\n                const user = userCredential.user;\n\n                localStorage.setItem('user', JSON.stringify({\n                    uid: user.uid,\n                    email:user.email,\n                    password: data.password,     \n                }));\n                \n            })\n            .catch(error => {\n               console.log(error.message);\n            }); \n\n        },\n       \n        logout: () => {\n            localStorage.removeItem('user');\n            signOut(auth).then(() => {\n               \n            }).catch((error) => {\n                console.log(error);\n            });\n        },\n\n        setNewRecord: (state, action) => {\n\n            const userId = doc(db, \"users\", auth.currentUser.uid);\n\n            updateDoc(userId, {\n                records: arrayUnion(action.payload)\n            });\n            \n        },\n\n        deleteRecord: (state, action) => {\n            const recordRef = doc(db, 'users', auth.currentUser.uid);\n            updateDoc(recordRef, { records: arrayRemove(action.payload) });\n                \n           \n        },\n\n        records: (state, action) => {\n            state.records = action.payload.records   \n        },\n\n        changeRecord: (state, action) => {\n\n            const userId = doc(db, \"users\", auth.currentUser.uid);\n\n            updateDoc(userId, {\n                records: action.payload\n            });\n        },\n\n        hidePassword: (state, action) => {\n\n            const userId = doc(db, \"users\", auth.currentUser.uid);\n\n            updateDoc(userId, {\n                records: action.payload\n            });\n        }\n    },\n});\n\n\nexport const {registration, login, logout, setNewRecord, deleteRecord, records, changeRecord, hidePassword} = appSlice.actions;\n\nexport const userState = (state) => state.manager;\n\nexport default appSlice.reducer","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {useState, useEffect} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { userState, login, logout} from '../features/appSlice'\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport {useHistory} from \"react-router-dom\";\n\n\nexport default function Login(props) {\n    \n\n    const state = useSelector(userState);\n    const dispatch = useDispatch();\n    const auth = getAuth();\n\n    const history = useHistory();\n\n    let [user, setUser] = useState({\n        email: '',\n        password: '',\n    });\n\n    function signUser() {\n        dispatch(login(user))\n    }\n\n    function signOut() {\n        dispatch(logout())\n    }\n\n\n    useEffect(() => {   \n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n\n                if(localStorage.getItem('user')){\n                    dispatch(login(JSON.parse(localStorage.getItem('user'))))\n                }\n                \n                history.push('/dashboard')\n                \n            } else {\n                \n                history.push('/')\n            }\n        });   \n    });\n    \n\n\n    \n    return (\n        <div className=\"wrapper\" >\n            <div className=\"box\">\n\n                <div className=\"title\">\n                    <h1>Sign in</h1>\n                </div>\n\n                <form className=\"form-box\">\n\n                    <input type=\"text\" placeholder=\"Enter your login\"\n                        onChange={event => setUser({...user, email:  event.target.value})}\n                    />\n\n                    \n                    <input type=\"password\"  placeholder=\"Enter your password\"\n                        onChange={event => setUser({...user, password:  event.target.value})}\n                    />\n\n                    <button type=\"button\" onClick={signUser}>Sign in</button>\n\n                    <button className='link' onClick={() => history.push('/registration-page')}>Haven't an account, just register</button>\n                    \n                </form>\n            </div>\n\n        </div>\n       \n\n       \n    )\n\n}\n\n\n\n","import React, {useState, useEffect} from 'react'\nimport { useSelector, useDispatch} from 'react-redux'\nimport {registration, userState, login} from '../features/appSlice'\nimport {useHistory} from \"react-router-dom\";\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\n\n\nexport default function Registration() {\n\n    const state = useSelector(userState);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const auth = getAuth();\n\n   \n\n    let [newUser, setNewUser] = useState({\n        email: '',\n        password: '',\n    });\n    \n\n    const regUser = (e) => {\n        dispatch(registration(newUser))\n    }\n\n    useEffect(() => {   \n        onAuthStateChanged(auth, (user) => {\n            if (user) {\n\n                if(localStorage.getItem('user')){\n                    dispatch(login(JSON.parse(localStorage.getItem('user'))))\n                }\n                \n                history.push('/dashboard')\n                \n            } \n        });   \n    });\n\n    return (\n        <div className=\"wrapper\">\n\n            <div className=\"box\">\n\n                <div className=\"title\">\n                    <h1>Registration</h1>\n                </div>\n\n                <form className=\"form-box\">\n\n                    <input type='email' placeholder=\"Enter your login\"\n                    onChange={event => setNewUser({...newUser, email:  event.target.value})}/>\n\n\n                    <input type='password'  placeholder=\"Enter your password\"\n                    onChange={event => setNewUser({...newUser, password:  event.target.value})}/>\n                    \n                    <button type=\"button\" onClick={regUser}>Registration</button>\n\n                    <button className='link' onClick={() => history.push('/')} >If you Have An Account, Just Sign In</button>\n\n                </form>\n\n            </div>\n\n        </div>  \n    )\n}\n","import React from 'react'\nimport './Modal.css'\n\n\nexport default function Modal(props) {\n\n   \n    let className = 'modal-container';\n\n    if (props.openModal) className += ' active';\n\n    return (\n        <div className={className}>\n\n            <div className=\"overlay\" onClick={props.onChange}/>\n\n            <div className=\"modal\">\n                {props.addModal}\n                {props.addForm}\n                {props.changeFeild}\n            </div>\n\n        </div>\n    )\n  \n}\n","\nimport Modal from '../modal/Modal'\nimport React, {Fragment, useState, useEffect} from 'react'\nimport { userState, logout, setNewRecord, deleteRecord, getRecords, changeRecord, hidePassword} from '../features/appSlice'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport {useHistory} from \"react-router-dom\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrash,  faEye, faPen} from '@fortawesome/free-solid-svg-icons'\n\n\nexport default function DashBoard(props) {\n\n    const state = useSelector(userState);\n    const dispatch = useDispatch();\n    const auth = getAuth();\n    const history = useHistory();\n    const trashBtn = <FontAwesomeIcon icon={faTrash} />\n    const hideBtn = <FontAwesomeIcon icon={faEye} />\n    const changeBtn = <FontAwesomeIcon icon={faPen} />\n\n  \n    let [active, setActive] = useState(false);\n\n    let [isHidden, setIsHidden] = useState(false);\n\n    let [button, setButton] = useState(false);\n\n    let [itemIndex, setIndex] = useState('');\n\n    let [record, setRecord] = useState({\n        title: '',\n        password: '',\n        email: '',\n        hidePass: false\n    });\n\n    const openModal = () => {\n        setActive(active = !active)\n    }\n\n    const hidePass = (index, item) => {\n\n        setIsHidden(isHidden = !isHidden)\n\n        let hidePassItem = {\n            title: item.title,\n            email: item.email,\n            password: item.password,\n            hidePass: isHidden\n        }\n\n        let hideRecords = state.records.slice();\n\n        hideRecords.splice(index, 1, hidePassItem);\n        \n        dispatch(hidePassword(hideRecords))\n    }\n\n    const signOut = () => {\n        dispatch(logout())\n        history.push('/')\n    }\n\n    const setRecordData = () => {\n        dispatch(setNewRecord(record))\n        openModal()\n    }\n\n    const openEditModal = (item, index) => {\n\n        setButton(true);\n        openModal();\n        setIndex(index)\n    }\n\n    const setEditItem = () => {\n        let editItem = state.records.slice();\n\n        editItem.splice(itemIndex, 1, record);\n\n        dispatch(changeRecord(editItem));\n        \n        openModal()\n    }\n\n    useEffect(() => {\n\n        onAuthStateChanged(auth, (user) => {\n            if (user) dispatch(getRecords(user.uid))   \n        });\n        \n    }, [] );\n    \n\n    return (\n\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard-header\">\n                <h1>Password List</h1>\n\n                <nav>\n                    <button className=\"add\" onClick={() => {openModal(); setButton(false)}}>Add New Record</button>\n                    <button className=\"logout\" onClick={signOut}>Logout</button>\n                </nav>\n            </div>\n\n            <div className=\"table-box\">\n                <table>\n                    <thead className=\"table-header\">\n                        <tr>\n                            <th>Services</th>\n                            <th>Email</th>\n                            <th>Password</th>     \n                        </tr>\n                    </thead>\n                    \n                    <tbody className=\"table-body\">\n                        {state.records.map((item, index) => (\n                            <tr key={index}>\n                                <td >{item.title}</td>\n                                <td >{item.email}</td>\n\n                                {item.hidePass ? (\n                                    <td >{item.password}</td>\n                                ) : (\n                                    <td >{item.password.replace(item.password, '*').repeat(item.password.length)}</td>\n                                )}\n\n                                <td className='icon' onClick={() => dispatch(deleteRecord(item))}>{trashBtn}</td>\n                                \n                                <td className='icon' onClick={() => hidePass(index, item)}>{hideBtn}</td>\n\n                                <td className='icon' onClick={() => openEditModal(item, index)}>{changeBtn}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n\n\n            <Fragment>\n\n                <Modal openModal={active} onChange={openModal}\n\n                    addForm={\n                        <form>\n\n                            <input type='text' placeholder='Enter Password Title' \n                            onChange={event => setRecord({...record, title:  event.target.value})}/>\n\n                            <input type='text' placeholder='Enter Your Email' \n                            onChange={event => setRecord({...record, email:  event.target.value})}/>\n\n                            <input type='text' placeholder='Enter Your Password' \n                            onChange={event => setRecord({...record, password:  event.target.value})}/>\n\n                            {button ? (\n                                <button type='button' onClick={setEditItem} >Edit record</button>\n                                ) : (\n                                <button type='button' onClick={setRecordData} >Set record</button>\n                            )}\n\n                        </form>\n                    }\n                    \n                />\n               \n            </Fragment>\n\n        </div>\n        \n    )\n\n}\n\n\n\n\n\n","import './App.css'\nimport React from 'react'\nimport { BrowserRouter as Router, Route, Switch, useHistory} from \"react-router-dom\"\nimport Login from './pages/login-page'\nimport Registration from './pages/register-page'\nimport DashBoard from './pages/dashboard'\n\n\nfunction App() {\n\n    const history = useHistory();\n    \n    return (\n        <Router history={history}>\n            <div className=\"app-container\"> \n\n                <Switch>               \n\n                    <Route path=\"/registration-page\">   \n                        <Registration/>        \n                    </Route>\n                       \n                    <Route path=\"/dashboard\">\n                        <DashBoard/>   \n                    </Route>\n\n                    <Route path=\"/\">\n                        <Login/>    \n                    </Route>   \n\n                </Switch>             \n\n            </div>\n        </Router>\n\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport appReducer from '../features/appSlice'\n\n\nexport default configureStore({\n  reducer: {\n    manager: appReducer\n  },\n\n});\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport './index.css'\nimport store from './app/store'\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  \n  <React.StrictMode>\n\n    <Provider store={store}>\n\n      <App/>\n\n    </Provider>\n\n  </React.StrictMode>,\n\n  document.getElementById('root')\n\n);\n\n\nreportWebVitals();\n\n                  "],"sourceRoot":""}